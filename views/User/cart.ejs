
<%- include('../Layout/user/hedder.ejs') -%>

<style>
    .product__cart__item__pic img {
    border-radius: 50%; /* Makes the image round */
    width: 80px; /* Adjust size as needed */
    height: 80px; /* Adjust size as needed */
    object-fit: cover; /* Ensures the image covers the area without distortion */
}
</style>
<body>
   
       
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <div class="header__logo">
                        <H4>EXIMIUS</H4>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6">
                    <nav class="header__menu mobile-menu">
                        <ul>
                            <li><a href="/">Home</a></li>
                            <li ><a href="/store">Shop</a></li>
                            <li><a href="#">Pages</a>
                                <ul class="dropdown">
                                    <li><a href="#">About Us</a></li>
                                    <li><a href="#">Shop Details</a></li>
                                    <li><a href="#">Shopping Cart</a></li>
                                    <li><a href="#">Check Out</a></li>
                                    <li><a href="#">Blog Details</a></li>
                                </ul>
                            </li>
                            <li><a href="#">Blog</a></li>
                            <li><a href="#">Contacts</a></li>
                        </ul>
                    </nav>
                </div>
                <div class="col-lg-3 col-md-3">
                    <div class="header__nav__option">
                        <a href="" class="search-switch"><img src="img/icon/search.png" alt=""></a>
                        <a href="/wishlist"><img src="img/icon/heart.png" alt=""></a>
                        <a href="/cart"><img src="img/icon/cart.png" alt=""> <span>0</span></a>
                        <div class="price">$0.00</div>
                    </div>
                </div>
            </div>
            <div class="canvas__open"><i class="fa fa-bars"></i></div>
        </div>
    </header>
    <!-- Header Section End -->

    <!-- Breadcrumb Section Begin -->
    <section class="breadcrumb-option">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="breadcrumb__text">
                        <h4>Shopping Cart</h4>
                        <div class="breadcrumb__links">
                            <a href="/">Home</a>
                            <a href="/store">Shop</a>
                            <span>Shopping Cart</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- Breadcrumb Section End -->

   <!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <% if (emptyCart) { %>
            <div class="empty-cart">
                <h2>Your cart is empty</h2>
                <p>It looks like you haven't added anything to your cart yet. Start shopping to add items!</p>
                <a href="/store" class="primary-btn">Continue Shopping</a>
            </div>
        <% } else { %>
            <div class="row">
                <div class="col-lg-8">
                    <form id="updateCartForm" action="/updateCart" method="POST">
                        <div class="shopping__cart__table">
                            <table>
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% cart.products.forEach(item => { %>
                                    <tr>
                                        <td class="product__cart__item">
                                            <div class="product__cart__item__pic">
                                                <img src="/productIMG/<%= item.product.productimages[0] %>" alt="<%= item.product.name %>">
                                            </div>
                                            <div class="product__cart__item__text">
                                                <h6><%= item.product.name %></h6>
                                                <% if (item.product.offerPrice) { %>
                                                    <h5>
                                                        <del>RS:<%= item.product.price.toFixed(2) %></del> 
                                                        RS:<%= item.product.offerPrice.toFixed(2) %>
                                                    </h5>
                                                <% } else { %>
                                                    <h5>RS:<%= item.product.price.toFixed(2) %></h5>
                                                <% } %>
                                            </div>
                                        </td>
                                        <td class="quantity__item">
                                            <div class="quantity">
                                                <div class="pro-qty-2">
                                                    <input type="number" class="quantity-input" data-id="<%= item.product._id %>" 
                                                        value="<%= item.quantity %>" 
                                                        min="1" 
                                                        max="<%= Math.min(5, item.product.quantity) %>" 
                                                        oninput="validateQuantity(this)" 
                                                        onkeydown="return false;">
                                                </div>
                                            </div>
                                        </td>
                                        <td class="cart__price">
                                            <% if (item.product.offerPrice) { %>
                                                RS:<%= (item.product.offerPrice * item.quantity).toFixed(2) %>
                                            <% } else { %>
                                                RS:<%= (item.product.price * item.quantity).toFixed(2) %>
                                            <% } %>
                                        </td>
                                        <td class="cart__close">
                                            <i class="fa fa-close" onclick="removeCartItem('<%= item.product._id %>')"></i>
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-outline-primary remove-item" data-id="<%= item.product._id %>" onclick="removeCartItem('<%= item.product._id %>')">Remove</button>
                                        </td>
                                    </tr>
                                    <% }) %>
                                </tbody>
                                
                            </table>
                        </div>
                    </form>
                </div>
                <div class="col-lg-4">
                    
                    <div class="cart__total">
                        <h6>Cart total</h6>
                        <ul>
                            <% 
                            // Calculate subtotal and total with offer prices
                            let subtotal = cart.products.reduce((total, item) => {
                                const price = item.product.offerPrice || item.product.price;
                                return total + (price * item.quantity);
                            }, 0);
                            
                            // Update totalPrice if offer prices are included
                            const totalPrice = subtotal; 
                            %>
                            <li>Subtotal <span>RS:<%= subtotal.toFixed(2) %></span></li>
                            <li>Total <span>RS:<%= totalPrice.toFixed(2) %></span></li>
                        </ul>
                        <a href="/checkout" class="primary-btn">Proceed to checkout</a>
                    </div>
                    
                </div>
            </div>
        <% } %>
    </div>
</section>
<!-- Shopping Cart Section End -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>

function validateQuantity(input) {
        const max = parseInt(input.max, 10); // Get the max value from the input attribute
        if (input.value > max) {
            input.value = max; // Reset the value to the max if it exceeds the limit
        }
    }

document.addEventListener('DOMContentLoaded', function () {
    // Remove item from cart (SweetAlert for confirmation)
    const removeButtons = document.querySelectorAll('.remove-item');
    removeButtons.forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-id');
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, remove it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`/removeFromCart/${productId}`, {
                        method: 'DELETE',
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire('Removed!', 'The product has been removed from your cart.', 'success')
                            .then(() => {
                                // Remove the row from the table without reloading the page
                                window.location.reload();
                            });
                        } else {
                            Swal.fire('Error!', 'There was an issue removing the product.', 'error');
                        }
                    })
                    .catch(error => {
                        Swal.fire('Error!', 'There was an issue removing the product.', 'error');
                    });
                }
            });
        });
    });

    // Automatically update cart when quantity changes
    const quantityInputs = document.querySelectorAll('.quantity-input');
    quantityInputs.forEach(input => {
        input.addEventListener('change', function () {
            const productId = this.getAttribute('data-id');
            let newQuantity = Math.min(5, Math.max(1, Number(this.value))); // Ensure the quantity stays between 1 and 5

            // Prepare the data for the cart update request
            const data = {
                [productId]: newQuantity
            };

            // Make an AJAX request to update the cart
            fetch('/updateCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update the totals in the UI dynamically
                    updateCartUI();
                } else {
                    Swal.fire('Error!', 'Error updating cart. Please try again.', 'error');
                }
            })
            .catch(error => {
                Swal.fire('Error!', 'Error updating cart.', 'error');
                console.error('Error updating cart:', error);
            });
        });
    });
});

// Function to update the cart UI dynamically
// Function to update the cart UI dynamically
function updateCartUI() {
    const rows = document.querySelectorAll('tbody tr');
    let subtotal = 0;

    rows.forEach(row => {
        const quantityInput = row.querySelector('.quantity-input');
        const quantity = parseInt(quantityInput.value, 10);

        // Get the price and offerPrice elements
        const priceElement = row.querySelector('.product__cart__item__text h5');
        const offerPriceExists = priceElement.querySelector('del'); // Check if offer price is displayed (indicated by <del> for the original price)
        
        let price = 0;
        if (offerPriceExists) {
            // Use offerPrice if it's displayed
            price = parseFloat(priceElement.innerText.split('RS:')[2].trim()); // Second RS: for offerPrice
        } else {
            // Fallback to regular price if offerPrice is not available
            price = parseFloat(priceElement.innerText.split('RS:')[1].trim()); // First RS: for regular price
        }

        // Calculate the total price for this product
        const total = price * quantity;

        // Update the total price in the DOM for the product
        const totalPriceElement = row.querySelector('.cart__price');
        totalPriceElement.innerText = `RS:${total.toFixed(2)}`;

        // Add the total to the subtotal
        subtotal += total;
    });

    // Update the subtotal and total in the cart
    document.querySelector('.cart__total ul li:nth-child(1) span').innerText = `RS:${subtotal.toFixed(2)}`;
    document.querySelector('.cart__total ul li:nth-child(2) span').innerText = `RS:${subtotal.toFixed(2)}`;
}

</script>
<%- include('../Layout/user/footer.ejs') -%>