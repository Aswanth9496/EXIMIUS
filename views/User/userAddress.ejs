<%- include('../Layout/user/hedder.ejs') %>

    <style>
        #editProfileForm .form-group {
    margin-bottom: 20px;
}

#editProfileForm label {
    font-weight: 600;
    color: #333;
    margin-bottom: 5px;
    display: block;
}

#editProfileForm .form-control {
    font-size: 16px;
    color: #000;
    background-color: #fff;
    border: 2px solid #ced4da;
    border-radius: 5px;
    padding: 12px 15px;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

#editProfileForm .form-control:focus {
    border-color: #007bff;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
    outline: none;
}

#editProfileForm .form-control::placeholder {
    color: #999;
}

#editProfileForm #name-error,
#editProfileForm #mobile-error {
    color: #dc3545;
    font-size: 14px;
    margin-top: 5px;
}

#editProfileForm .btn-primary {
    font-weight: 600;
    font-size: 16px;
    padding: 10px 20px;
    background-color: #007bff;
    border-color: #007bff;
    transition: background-color 0.15s ease-in-out;
}

#editProfileForm .btn-primary:hover {
    background-color: #0056b3;
    border-color: #0056b3;
}
        #myPassword .modal-content {
    border-radius: 15px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

#myPassword .modal-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid #e9ecef;
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
}

#myPassword .modal-title {
    font-weight: 600;
    color: #333;
}

#myPassword .modal-body {
    padding: 30px;
}

#myPassword label {
    font-weight: 500;
    color: #495057;
    margin-bottom: 5px;
}

#myPassword .form-control {
    border: 1px solid #ced4da;
    border-radius: 5px;
    padding: 10px;
    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

#myPassword .form-control:focus {
    border-color: #80bdff;
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
}

#myPassword .btn-primary {
    font-weight: 500;
    padding: 10px 20px;
    background-color: #007bff;
    border-color: #007bff;
    transition: background-color 0.15s ease-in-out;
}

#myPassword .btn-primary:hover {
    background-color: #0056b3;
    border-color: #0056b3;
}

#myPassword .btn-default {
    font-weight: 500;
    padding: 10px 20px;
    color: #6c757d;
    background-color: #f8f9fa;
    border-color: #f8f9fa;
    transition: background-color 0.15s ease-in-out;
}

#myPassword .btn-default:hover {
    color: #495057;
    background-color: #e2e6ea;
    border-color: #dae0e5;
}

#password-error,
#confirm-password-error {
    color: #dc3545;
    font-size: 0.875rem;
    margin-top: 5px;
}
        .address-box {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            background-color: #fff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .address-header {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 12px;
            color: #333;
        }

        .address-box p {
            font-size: 16px;
            line-height: 1.6;
            color: #555;
            margin-bottom: 15px;
        }

        .address-actions {
            display: flex;
            gap: 15px;
        }

        .address-actions a {
            text-decoration: none;
            font-size: 14px;
            font-weight: 600;
            transition: opacity 0.2s ease;
        }

        .address-actions a:hover {
            opacity: 0.7;
        }

        .address-actions .text-primary {
            color: #007bff;
        }

        .address-actions .text-danger {
            color: #dc3545;
        }

        .breadcrumbs {
            background-color: #f8f9fa;
            padding: 20px 0;
            /* Padding for the breadcrumbs */
            position: relative;
        }

        .breadcrumbs .bread {
            text-align: left;
            /* Left-align the breadcrumb navigation */
            font-size: 14px;
            margin-bottom: 0;
        }

        .breadcrumbs h1 {
            font-size: 48px;
            /* Size for the heading */
            font-weight: bold;
            margin: 20px 0;
            /* Margin above and below the heading */
            text-align: center;
            /* Center the heading */
        }

        .sidebar ul li {
            margin-bottom: 15px;
            /* Adds space between each list item */
        }

        .sidebar ul li a {
            display: block;
            /* Ensures that padding is applied correctly */
            padding: 10px 0;
            /* Adds padding above and below each link */
        }

        .account-section {
            margin-top: 20px;
        }

        .sidebar {
            border-right: 1px solid #ddd;
            padding-right: 15px;
            background-color: #f8f9fa;
            padding: 20px;
            min-height: 100vh;
        }

        .sidebar ul {
            font-size: 18px;
        }

        .sidebar ul li {
            margin-bottom: 15px;
            /* Adds space between each list item */
        }

        .sidebar a {
            color: #333;
            text-decoration: none;
        }

        .sidebar a:hover {
            color: #007bff;
        }

        .address-box {
            border: 1px solid #ddd;
            padding: 15px;
            margin-bottom: 15px;
            border-radius: 5px;
        }

        .address-actions a {
            margin-right: 10px;
        }

        .address-header {
            font-weight: bold;
            margin-bottom: 10px;
        }

        h3 {
            margin-top: 10px;
        }

        .badge-cancel {
            background-color: #ff9900;
            /* Orange color */
            color: #fff;
            /* Text color */
        }

        .card {
            border-radius: 10px;
            background: linear-gradient(145deg, #f8f9fa, #ffffff);
            box-shadow: 5px 5px 10px #d1d1d1, -5px -5px 10px #ffffff;
        }

        .card-title {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            font-size: 1.5rem;
            color: #007bff;
        }

        p {
            font-family: 'Poppins', sans-serif;
            font-size: 1rem;
            color: #333333;
        }

        .btn {
            font-family: 'Poppins', sans-serif;
            font-weight: 500;
            border-radius: 5px;
        }

        .btn-outline-primary {
            border-color: #007bff;
            color: #007bff;
        }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #ffffff;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
        .list-unstyled {
    padding: 0;
    margin: 0;
    list-style-type: none;
}

.list-unstyled li {
    margin-bottom: 10px;
}

.list-unstyled li a {
    display: block;
    padding: 12px 15px;
    text-decoration: none;
    color: #333;
    background-color: #f8f9fa;
    border-radius: 5px;
    transition: all 0.3s ease;
    font-family: Arial, sans-serif;
    font-size: 16px;
}

.list-unstyled li a:hover {
    background-color: #e9ecef;
    color: #007bff;
    transform: translateX(5px);
}   
    </style>



<body>
    <div class="breadcrumbs">
        <div class="container">
            <div class="row">
                <div class="col">
                    <p class="bread"><span><a href="/">Home</a></span> / <span>Addresses</span></p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <h1>Addresses</h1>
                </div>
            </div>
        </div>
    </div>

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-3 sidebar">
                <ul class="list-unstyled">
                    <li><a href="/profile">Account Details</a></li>
                    <li><a href="/orderList">Orders</a></li>
                    <li><a href="#">Wallet</a></li>
                    <li><a href="#">Downloads</a></li>
                    <li><a href="/address">Addresses</a></li>
                    <li><a href="/logout">Sign Out</a></li>
                </ul>
            </div>
            <div class="col-md-9">
                <div class="card shadow-sm mb-4 border-0">
                    <div class="card-body p-4">
                        <h4 class="card-title mb-4 text-primary">Addresses</h4>
                        <button class="btn btn-primary mb-3" data-toggle="modal" data-target="#addAddressModal">
                            Add New Address
                        </button>
                        <div class="row">
                            <% if (addresses.length === 0) { %>
                                <p>No address is added.</p>
                            <% } else { %>
                                <div class="row">
                                    <% addresses.forEach(address => { %> <!-- Corrected Loop -->
                                        <div class="col-md-12 mb-3">
                                            <div class="card border-0 shadow-sm">
                                                <div class="card-body">
                                                    <h5 class="card-title"><%= address.addressName %></h5>
                                                    <p class="card-text">
                                                        <strong>Email:</strong> <%= address.addressEmail %><br>
                                                        <strong>Mobile:</strong> <%= address.addressMobile %><br>
                                                        <strong>House:</strong> <%= address.addressHouse %><br>
                                                        <strong>Street:</strong> <%= address.addressStreet %><br>
                                                        
                                                        <strong>City:</strong> <%= address.addressCity %><br>
                                                        <strong>District:</strong> <%= address.addressDistrict %><br>
                                                        <strong>State:</strong> <%= address.addressState %><br>
                                                        <strong>Pin:</strong> <%= address.addressPin %>
                                                    </p>
                                                    <button class="btn btn-outline-primary" onclick="editAddress('<%= JSON.stringify(address) %>')" data-toggle="modal" data-target="#editAddressModal">
                                                        Edit
                                                    </button>
                                                    <button class="btn btn-outline-primary" onclick="deleteAddress('<%= address._id %>')">Delete</button>
                                                </div>
                                            </div>
                                        </div>
                                    <% }) %> <!-- End of forEach loop -->
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>
            

    <!-- Add Address Modal -->
    <div id="addAddressModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add New Address</h4>
                </div>
                <div class="modal-body">
                    <form id="addAddressForm" action="/addAddress" method="POST">
                        <div class="form-group">
                            <label for="addressName">Name</label>
                            <input type="text" class="form-control" id="addressName" name="addressName" required>
                        </div>
                        <div class="form-group">
                            <label for="addressMobile">Mobile Number</label>
                            <input type="tel" class="form-control" id="addressMobile" name="addressMobile" required>
                        </div>
                        <div class="form-group">
                            <label for="addressHouse">House</label>
                            <input type="text" class="form-control" id="addressHouse" name="addressHouse" required>
                        </div>
                        <div class="form-group">
                            <label for="addressStreet">Street</label>
                            <input type="text" class="form-control" id="addressStreet" name="addressStreet" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="addressCity">City</label>
                            <input type="text" class="form-control" id="addressCity" name="addressCity" required>
                        </div>
                        <div class="form-group">
                            <label for="addressDistrict">District</label>
                            <input type="text" class="form-control" id="addressDistrict" name="addressDistrict" required>
                        </div>
                        <div class="form-group">
                            <label for="addressState">State</label>
                            <input type="text" class="form-control" id="addressState" name="addressState" required>
                        </div>
                        <div class="form-group">
                            <label for="addressPin">Pin</label>
                            <input type="text" class="form-control" id="addressPin" name="addressPin" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Address</button>
                    </form>
    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Address Modal -->
    <div id="editAddressModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Address</h4>
                </div>
                <div class="modal-body">
                    <form id="editAddressForm">
                        
                        <input type="hidden" id="editAddressId">
                        <div class="form-group">
                            <label for="editAddressName">Name</label>
                            <input type="text" class="form-control" id="editAddressName" name="addressName" required>
                        </div>
                       
                        <div class="form-group">
                            <label for="editAddressMobile">Mobile Number</label>
                            <input type="tel" class="form-control" id="editAddressMobile" name="addressMobile" required>
                        </div>
                        <div class="form-group">
                            <label for="editAddressHouse">House</label>
                            <input type="text" class="form-control" id="editAddressHouse" name="addressHouse" required>
                        </div>
                        <div class="form-group">
                            <label for="editAddressStreet">Street</label>
                            <input type="text" class="form-control" id="editAddressStreet" name="addressStreet" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="editAddressCity">City</label>
                            <input type="text" class="form-control" id="editAddressCity" name="addressCity" required>
                        </div>
                        <div class="form-group">
                            <label for="editAddressDistrict">District</label>
                            <input type="text" class="form-control" id="editAddressDistrict" name="addressDistrict" required>
                        </div>
                        <div class="form-group">
                            <label for="editAddressState">State</label>
                            <input type="text" class="form-control" id="editAddressState" name="addressState" required>
                        </div>
                        <div class="form-group">
                            <label for="editAddressPin">Pin</label>
                            <input type="text" class="form-control" id="editAddressPin" name="addressPin" required>
                        </div>
                        <button type="button" class="btn btn-primary" id="updateAddressBtn">Save changes</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>  

<!-- Edit Address Modal -->
<div id="editAddressModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit Address</h4>
            </div>
            <div class="modal-body">
                <form id="editAddressForm" action="/updateAddress" method="POST">
                    <!-- Hidden input to store the address ID -->
                    <input type="hidden" id="editAddressId" name="id">
                    <div class="form-group">
                        <label for="editAddressName">Name</label>
                        <input type="text" class="form-control" id="editAddressName" name="addressName" required>
                    </div>
                    <div class="form-group">
                        <label for="editAddressMobile">Mobile Number</label>
                        <input type="tel" class="form-control" id="editAddressMobile" name="addressMobile" required>
                    </div>
                    <div class="form-group">
                        <label for="editAddressHouse">House</label>
                        <input type="text" class="form-control" id="editAddressHouse" name="addressHouse" required>
                    </div>
                    <div class="form-group">
                        <label for="editAddressStreet">Street</label>
                        <input type="text" class="form-control" id="editAddressStreet" name="addressStreet" required>
                    </div>
                    <div class="form-group">
                        <label for="editAddressCity">City</label>
                        <input type="text" class="form-control" id="editAddressCity" name="addressCity" required>
                    </div>
                    <div class="form-group">
                        <label for="editAddressDistrict">District</label>
                        <input type="text" class="form-control" id="editAddressDistrict" name="addressDistrict" required>
                    </div>
                    <div class="form-group">
                        <label for="editAddressState">State</label>
                        <input type="text" class="form-control" id="editAddressState" name="addressState" required>
                    </div>
                    <div class="form-group">
                        <label for="editAddressPin">Pin</label>
                        <input type="text" class="form-control" id="editAddressPin" name="addressPin" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
   
</body>

<script>
    function deleteAddress(addressId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/deleteAddress/${addressId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire(
                            'Deleted!',
                            'Your address has been deleted.',
                            'success'
                        ).then(() => {
                            location.reload(); // Reload the page to reflect the changes
                        });
                    } else {
                        Swal.fire(
                            'Error!',
                            'There was an error deleting the address. Please try again.',
                            'error'
                        );
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire(
                        'Error!',
                        'An error occurred. Please try again.',
                        'error'
                    );
                });
            }
        });
    }

    function editAddress(address) {
    const addressData = JSON.parse(address);

    // Set the values in the form
    document.getElementById('editAddressId').value = addressData._id;
    document.getElementById('editAddressName').value = addressData.addressName;
    document.getElementById('editAddressMobile').value = addressData.addressMobile;
    document.getElementById('editAddressHouse').value = addressData.addressHouse;
    document.getElementById('editAddressStreet').value = addressData.addressStreet;
    document.getElementById('editAddressCity').value = addressData.addressCity;
    document.getElementById('editAddressDistrict').value = addressData.addressDistrict;
    document.getElementById('editAddressState').value = addressData.addressState;
    document.getElementById('editAddressPin').value = addressData.addressPin;
    
    // Show the modal
    $('#editAddressModal').modal('show');
}


function editAddress(address) {
    const addressData = JSON.parse(address);

    // Populate the form fields with address data
    document.getElementById('editAddressId').value = addressData._id;
    document.getElementById('editAddressName').value = addressData.addressName;
    document.getElementById('editAddressMobile').value = addressData.addressMobile;
    document.getElementById('editAddressHouse').value = addressData.addressHouse;
    document.getElementById('editAddressStreet').value = addressData.addressStreet;
    document.getElementById('editAddressCity').value = addressData.addressCity;
    document.getElementById('editAddressDistrict').value = addressData.addressDistrict;
    document.getElementById('editAddressState').value = addressData.addressState;
    document.getElementById('editAddressPin').value = addressData.addressPin;
    
    // Show the modal
    $('#editAddressModal').modal('show');
}

document.getElementById('updateAddressBtn').addEventListener('click', function() {
    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to save the changes?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, save changes!',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            const id = document.getElementById('editAddressId').value;
            const addressName = document.getElementById('editAddressName').value;
            const addressMobile = document.getElementById('editAddressMobile').value;
            const addressHouse = document.getElementById('editAddressHouse').value;
            const addressStreet = document.getElementById('editAddressStreet').value;
            const addressCity = document.getElementById('editAddressCity').value;
            const addressDistrict = document.getElementById('editAddressDistrict').value;
            const addressState = document.getElementById('editAddressState').value;
            const addressPin = document.getElementById('editAddressPin').value;

            fetch('/updateAddress', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id,
                    addressName,
                    addressMobile,
                    addressHouse,
                    addressStreet,
                    addressCity,
                    addressDistrict,
                    addressState,
                    addressPin
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire(
                        'Updated!',
                        'Your address has been updated.',
                        'success'
                    ).then(() => {
                        location.reload(); // Reload the page to reflect the changes
                    });
                } else {
                    Swal.fire(
                        'Error!',
                        'There was an error updating the address. Please try again.',
                        'error'
                    );
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire(
                    'Error!',
                    'An error occurred. Please try again.',
                    'error'
                );
            });
        }
    });
});

</script>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<%- include('../Layout/user/footer.ejs') %>

