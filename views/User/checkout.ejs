<%- include('../Layout/user/hedder.ejs') %>


<style>
    .address-box {
    position: relative;
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 15px;
    border-radius: 5px;
}

.edit-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    padding: 5px 10px;
    background-color: #f0f0f0;
    border: 1px solid #ccc;
    border-radius: 3px;
    cursor: pointer;
}

.edit-btn:hover {
    background-color: #e0e0e0;
}
.btn-add-address {
    background-color: #ffffff;
    color: #4a4a4a;
    border: 1px solid #4a4a4a;
    border-radius: 15px;
    padding: 5px 10px;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    transition: all 0.2s ease;
    cursor: pointer;
    outline: none;
}

.btn-add-address:hover {
    background-color: #4a4a4a;
    color: #ffffff;
}
     .modal-header {
    border-bottom: none;
  }
  
  .modal-footer {
    border-top: none;
  }
  
  .coupon-list {
    max-height: 300px;
    overflow-y: auto;
  }
  
  .coupon-item {
    border: 2px dashed #007bff;
    border-radius: 10px;
    padding: 15px;
    margin-bottom: 15px;
    background-color: #f8f9fa;
    transition: all 0.3s ease;
  }
  
  .coupon-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .coupon-code {
    font-size: 1.2em;
    font-weight: bold;
    color: #007bff;
    margin-bottom: 5px;
  }
  
  .coupon-description {
    font-size: 0.9em;
    color: #6c757d;
    margin-bottom: 10px;
  }
  
  .copy-btn {
    float: right;
  }
    /* Style for the address boxes */
    .address-box {
        display: flex;
        align-items: flex-start;
        margin-bottom: 15px;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .address-box input[type="radio"] {
        margin-right: 10px;
        cursor: pointer;
    }

    .address-details p {
        margin: 0;
    }

    /* Style for the 'Add New Address' link */
    .add-new-address {
        text-align: center;
        margin-top: 20px;
    }

    .add-new-address a {
        color: #007bff;
        text-decoration: none;
        font-weight: bold;
    }

    .add-new-address a:hover {
        text-decoration: underline;
    }

    /* Style for the address boxes */
    .address-box {
        display: flex;
        align-items: flex-start;
        margin-bottom: 15px;
        padding: 15px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .address-box input[type="radio"] {
        margin-right: 15px;
        cursor: pointer;
        accent-color: #007bff;
        /* For modern browsers with support for accent-color */
    }

    .address-details p {
        margin: 0;
        font-size: 16px;
        line-height: 1.6;
        color: #333;
    }

    .address-details p:first-child {
        font-weight: bold;
    }

    /* Style for the 'Add New Address' link */
    .add-new-address {
        text-align: center;
        margin-top: 20px;
    }

    .add-new-address a {
        color: #007bff;
        text-decoration: none;
        font-weight: bold;
        font-size: 16px;
    }

    .add-new-address a:hover {
        text-decoration: underline;
        color: #0056b3;
    }
    .cart-detail {
border: 1px solid #ddd;
padding: 20px;
border-radius: 8px;
background-color: #f9f9f9;
box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.cart-detail h2 {
font-size: 24px;
margin-bottom: 15px;
color: #333;
}

.cart-summary {
list-style-type: none;
padding: 0;
margin: 0;
}

.cart-item {
display: flex;
justify-content: space-between;
padding: 10px 0;
border-bottom: 1px solid #eee;
}

.cart-item:last-child {
border-bottom: none;
}

.product-list {
list-style-type: none;
padding: 0;
margin: 0;
}

.product-list li {
display: flex;
justify-content: space-between;
padding: 5px 0;
}

.free-shipping {
color: #28a745; /* Green color for free shipping */
font-weight: bold;
}
.coupon-section {
                        margin-bottom: 20px;
                        padding: 10px;
                        border: 1px solid #ddd;
                        border-radius: 8px;
                        background-color: #f9f9f9;
                    }
                    
                    .coupon-input {
                        display: flex;
                        align-items: center;
                        gap: 10px;
                    }
                    
                    #coupon-code {
                        flex: 1;
                        padding: 5px;
                        border: 1px solid #ccc;
                        border-radius: 4px;
                    }
                    .coupon-section {
    background-color: #f8f9fa;
    border-radius: 10px;
    transition: all 0.3s ease;
}

.coupon-section:hover {
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.card-title {
    color: #333;
    font-weight: bold;
}

.input-group {
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

#coupon-code {
    border: none;
    padding: 10px 15px;
}

.apply-coupon-btn {
    background-color: #007bff;
    border: none;
    padding: 10px 20px;
    transition: background-color 0.3s ease;
}

.apply-coupon-btn:hover {
    background-color: #0056b3;
}

.show-coupons-btn {
    border: 2px dashed #6c757d;
    padding: 10px;
    transition: all 0.3s ease;
}

.show-coupons-btn:hover {
    background-color: hsl(204, 13%, 8%);
    color: white;
    
}
.coupon-section {
        background-color: #f8f9fa;
        border-radius: 10px;
        transition: all 0.3s ease;
    }

    .coupon-section:hover {
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .card-title {
        color: #333;
        font-weight: bold;
    }

    .input-group {
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        position: relative;
    }

    #coupon-code {
        border: none;
        padding: 10px 15px;
        padding-right: 80px; /* Make space for the button */
    }

    .input-group-append {
        position: absolute;
        right: 5px;
        top: 50%;
        transform: translateY(-50%);
        z-index: 10;
    }

    .apply-coupon-btn {
        background-color: #007bff;
        border: none;
        padding: 5px 15px;
        transition: background-color 0.3s ease;
    }

    .apply-coupon-btn:hover {
        background-color: #0056b3;
    }

    .show-coupons-btn {
        border: 2px dashed #6c757d;
        padding: 10px;
        transition: all 0.3s ease;
    }

    .show-coupons-btn:hover {
        background-color: #6c757d;
        color: white;
    }


    .cart-detail {
        border: 1px solid #ddd;
        padding: 30px 20px; /* Increased padding for more height */
        border-radius: 8px;
        background-color: #ffffff;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        min-height: 250px; /* Set a minimum height */
    }

    .cart-detail h2 {
        font-size: 24px;
        margin-bottom: 20px; /* Adjusted margin for better spacing */
        color: #007bff;
    }

    .form-group {
        margin-bottom: 20px; /* Added margin for spacing between payment options */
    }

    .radio {
        padding: 10px 0;
        font-size: 18px; /* Increased font size */
    }

    .radio label {
        display: block;
        padding-left: 25px;
        position: relative;
        cursor: pointer;
        line-height: 24px; /* Adjusted line height for better readability */
    }

    .radio input[type="radio"] {
        position: absolute;
        left: 0;
        top: 0;
        width: 20px;
        height: 20px;
        margin-top: 2px;
        cursor: pointer;
        accent-color: #007bff; /* Matches the theme color */
    }

    h2 {
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
    }

    .btn-add-address {
        font-size: 1rem;
        padding: 10px 20px;
        width: 100%;
    }

    .address-box {
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f9f9f9;
        transition: background-color 0.3s ease;
    }

    .address-box:hover {
        background-color: #f1f1f1;
    }

    .address-details {
        font-size: 1rem;
        color: #555;
    }

    .edit-btn {
        font-size: 0.875rem;
    }

    .mr-2 {
        margin-right: 10px;
    }

    .mb-3 {
        margin-bottom: 1rem;
    }

    .p-3 {
        padding: 1rem;
    }

    .card {
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .button-container {
    margin-left: auto;
}

.button-container .btn {
    margin-left: 0.5rem; /* Adjust spacing between buttons */
}

</style>


    <div class="colorlib-loader"></div>

    <div id="page">

        <!-- content start here -->

        <div class="breadcrumbs">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <p class="bread"><span><a href="index.html">Home</a></span> / <span>Checkout</span></p>
                    </div>
                </div>
            </div>
        </div>


        <div class="colorlib-product">
            <div class="container">
                
                <div class="row">
                    <div class="col-lg-8">
                       
                        <div class="coupon-section card shadow-sm p-4 mb-4">
                            
                            <h5 class="card-title mb-3">Discount Coupons</h5>
                            <form id="couponForm" class="mb-3">
                                <div class="input-group">
                                    <input type="text" id="coupon-code" name="couponCode" class="form-control" placeholder="Enter coupon code" required>
                                    <div class="input-group-append">
                                        <button type="submit" class="btn btn-primary apply-coupon-btn">Apply</button>
                                        <button type="button" id="removeCouponBtn" class="btn btn-danger">Remove</button>
                                    </div>
                                </div>
                            </form>
                            <div class="error-message mb-3" id="message">
                               
                            </div>
                            <button type="button" class="btn btn-outline-secondary show-coupons-btn w-100" data-toggle="modal" data-target="#myModal">
                                <i class="fas fa-tags me-2"></i>Show All Available Coupons
                            </button>
                        </div>
                       

<h2 class="mb-3">Select an Address</h2>
<div class="add-new-address mb-3">
    <button type="button" class="btn btn-primary btn-add-address" data-toggle="modal" data-target="#addressModal">
        Add New Address
    </button>
</div>
<% if (addresses.length > 0) { %>
    <% addresses.forEach(function(address) { %>
        <div class="address-box card p-3 mb-3 shadow-sm">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <input type="radio" name="address" value="<%= address._id %>" id="address-<%= address._id %>" class="mr-2">
                    <label for="address-<%= address._id %>" class="address-details">
                        <p><strong><%= address.addressName %></strong></p>
                        <p><%= address.addressHouse %>, <%= address.addressStreet %></p>
                        <p><%= address.addressCity %>, <%= address.addressDistrict %>, <%= address.addressState %> - <%= address.addressPin %></p>
                        <p>Mobile: <%= address.addressMobile %></p>
                    </label>
                </div>
                <div class="button-container ml-auto">
                    <button class="btn btn-sm btn-outline-secondary" 
                            data-toggle="modal" 
                            data-target="#addressModal" 
                            data-id="<%= address._id %>" 
                            aria-label="Edit Address">
                        Edit
                    </button>
                    <button class="btn btn-sm btn-outline-danger ml-2" 
                            data-id="<%= address._id %>" 
                            aria-label="Delete Address">
                        Delete
                    </button>
                </div>
            </div>
        </div>
    <% }) %>
<% } else { %>
    <p>No addresses found. Please add a new address.</p>
<% } %>

             </div>


                    <div class="col-lg-4">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="cart-detail card p-3 shadow-sm">
                                    <h2 class="mb-4">Cart Total</h2>
                                    <ul class="cart-summary list-unstyled">
                                        <li class="cart-item mb-3">
                                            <ul class="product-list list-unstyled">
                                                <% if (cart.products.length > 0) { %>
                                                    <% cart.products.forEach(function(item) { %>
                                                        <li class="mb-2">
                                                            <strong><%= item.product.name %></strong> 
                                                            <span class="float-right">&#8377; <%= item.product.price %> x <%= item.quantity %></span>
                                                        </li>
                                                    <% }) %>
                                                <% } else { %>
                                                    <li>No products in cart</li>
                                                <% } %>
                                            </ul>
                                        </li>
                                        <li class="cart-item mb-3">
                                            <span>Shipping</span> <span class="float-right free-shipping">Free</span>
                                        </li>
                                        <li class="cart-item mb-3">
                                            <span>Order Total</span> 
                                            <span class="float-right">&#8377; <%= cart.totalPrice %></span>
                                        </li>
                                        <li class="discount-item mb-3" style="display: none;">
                                            <span>Coupon Discount</span> <span class="float-right discount-amount">&#8377; 0</span>
                                        </li>
                                        <li class="subtotal-item mb-3" style="display: none;">
                                            <span>Subtotal</span> <span class="float-right subtotal-amount">&#8377; <%= cart.totalPrice %></span>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            

                            <div class="w-100"></div>

                            <div class="col-md-12">
                                <div class="cart-detail">
                                    <h2>Payment Method</h2>
                                    
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <div class="radio">
                                                <label><input type="radio" name="optradio" value="razorpay"> Online Payment</label>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <div class="col-md-12">
                                            <div class="radio">
                                                <label><input type="radio" name="optradio" value="cod"> COD</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 text-center">
                                <p><button class="btn btn-primary" id="placeOrderBtn">Place an order</button> </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- content end here -->

        <!-- modal for show coupon -------------------------------------------------------------------------------------------------->
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="couponModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
              <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                  <h5 class="modal-title" id="couponModalLabel">Available Coupon Codes</h5>
                  <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                  </button>
                </div>
                <div class="modal-body">
                  <div class="coupon-list">
                   
                    
                  </div>
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
              </div>
            </div>
          </div>
<!------------------------------ modal for add address ------------------------------------------------------------------------------------------->

         <!-- Modal for adding an address -->
<div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addressModalLabel">Add New Address</h5>
                <button id="clickbtn" type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <!-- Address form -->
                <form id="addressForm" action="/CheckoutAddaddress" method="post">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="addressName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="addressName" name="addressName" >
                            <div class="invalid-feedback" id="name-error">Name is required.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="addressEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="addressEmail" name="addressEmail" >
                            <div class="invalid-feedback" id="email-error">Please enter a valid email.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="addressMobile" class="form-label">Mobile</label>
                            <input type="tel" class="form-control" id="addressMobile" name="addressMobile" pattern="[0-9]{10}" >
                            <div class="invalid-feedback" id="mobile-error">Mobile number must be 10 digits.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="addressHouse" class="form-label">House/Apartment No.</label>
                            <input type="text" class="form-control" id="addressHouse" name="addressHouse" >
                            <div class="invalid-feedback" id="house-error">House/Apartment number is required.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="addressStreet" class="form-label">Street</label>
                            <input type="text" class="form-control" id="addressStreet" name="addressStreet" >
                            <div class="invalid-feedback" id="street-error">Street is required.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="addressCity" class="form-label">City</label>
                            <input type="text" class="form-control" id="addressCity" name="addressCity" >
                            <div class="invalid-feedback" id="city-error">City is required.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="addressDistrict" class="form-label">District</label>
                            <input type="text" class="form-control" id="addressDistrict" name="addressDistrict" >
                            <div class="invalid-feedback" id="district-error">District is required.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="addressState" class="form-label">State</label>
                            <input type="text" class="form-control" id="addressState" name="addressState" >
                            <div class="invalid-feedback" id="state-error">State is required.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="addressPin" class="form-label">Pin Code</label>
                            <input type="number" class="form-control" id="addressPin" name="addressPin">
                            <div class="invalid-feedback" id="pin-error">Pin code is required.</div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Address</button>
                </form>
                
                
                <!-- Address form end -->
            </div>
        </div>
    </div>
</div>



<!-- Modal for editing an address -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editAddressForm" action="/CheckoutUpdateAddress" method="post">
                    <input type="hidden" id="editAddressId" name="addressId">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editAddressName" class="form-label">Name</label>
                            <input type="text" class="form-control" id="editAddressName" name="addressName">
                            <div class="invalid-feedback" id="edit-name-error">Name is required.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editAddressEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="editAddressEmail" name="addressEmail">
                            <div class="invalid-feedback" id="edit-email-error">Please enter a valid email.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editAddressMobile" class="form-label">Mobile</label>
                            <input type="tel" class="form-control" id="editAddressMobile" name="addressMobile" pattern="[0-9]{10}">
                            <div class="invalid-feedback" id="edit-mobile-error">Mobile number must be 10 digits.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editAddressHouse" class="form-label">House/Apartment No.</label>
                            <input type="text" class="form-control" id="editAddressHouse" name="addressHouse">
                            <div class="invalid-feedback" id="edit-house-error">House/Apartment number is required.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editAddressStreet" class="form-label">Street</label>
                            <input type="text" class="form-control" id="editAddressStreet" name="addressStreet">
                            <div class="invalid-feedback" id="edit-street-error">Street is required.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editAddressCity" class="form-label">City</label>
                            <input type="text" class="form-control" id="editAddressCity" name="addressCity">
                            <div class="invalid-feedback" id="edit-city-error">City is required.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editAddressDistrict" class="form-label">District</label>
                            <input type="text" class="form-control" id="editAddressDistrict" name="addressDistrict">
                            <div class="invalid-feedback" id="edit-district-error">District is required.</div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editAddressState" class="form-label">State</label>
                            <input type="text" class="form-control" id="editAddressState" name="addressState">
                            <div class="invalid-feedback" id="edit-state-error">State is required.</div>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editAddressPin" class="form-label">Pin Code</label>
                            <input type="number" class="form-control" id="editAddressPin" name="addressPin">
                            <div class="invalid-feedback" id="edit-pin-error">Pin code is required.</div>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Address</button>
                </form>
            </div>
        </div>
    </div>
</div>

 <!-- edit modal end here -------------------------------------------------------------------------------------------------------->

       
<script>
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('addressForm');

    form.addEventListener('submit', function (event) {
        let valid = true;

        // Clear previous error messages
        const errors = document.querySelectorAll('.invalid-feedback');
        errors.forEach(error => error.style.display = 'none');

        // Validate Name
        const name = document.getElementById('addressName');
        if (!name.value.trim()) {
            showError('name-error', 'Name is required.');
            valid = false;
        }

        // Validate Email
        const email = document.getElementById('addressEmail');
        if (!email.value.trim() || !email.checkValidity()) {
            showError('email-error', 'Please enter a valid email.');
            valid = false;
        }

        // Validate Mobile
        const mobile = document.getElementById('addressMobile');
        if (!mobile.value.trim() || !mobile.checkValidity()) {
            showError('mobile-error', 'Mobile number must be 10 digits.');
            valid = false;
        }

        // Validate House/Apartment
        const house = document.getElementById('addressHouse');
        if (!house.value.trim()) {
            showError('house-error', 'House/Apartment number is required.');
            valid = false;
        }

        // Validate Street
        const street = document.getElementById('addressStreet');
        if (!street.value.trim()) {
            showError('street-error', 'Street is required.');
            valid = false;
        }

        // Validate City
        const city = document.getElementById('addressCity');
        if (!city.value.trim()) {
            showError('city-error', 'City is required.');
            valid = false;
        }

        // Validate District
        const district = document.getElementById('addressDistrict');
        if (!district.value.trim()) {
            showError('district-error', 'District is required.');
            valid = false;
        }

        // Validate State
        const state = document.getElementById('addressState');
        if (!state.value.trim()) {
            showError('state-error', 'State is required.');
            valid = false;
        }

        // Validate Pin Code
        const pin = document.getElementById('addressPin');
        if (!pin.value.trim()) {
            showError('pin-error', 'Pin code is required.');
            valid = false;
        }

        if (!valid) {
            event.preventDefault(); // Prevent form submission if validation fails
        }
    });

    function showError(id, message) {
        const errorElement = document.getElementById(id);
        errorElement.textContent = message;
        errorElement.style.display = 'block';
    }
});



document.addEventListener('DOMContentLoaded', () => {
    // Handle Delete button clicks
    document.querySelectorAll('.btn-outline-danger').forEach(button => {
        button.addEventListener('click', () => {
            const addressId = button.getAttribute('data-id');

            // Use SweetAlert2 for confirmation
            Swal.fire({
                title: 'Are you sure?',
                text: 'You won\'t be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/CheckoutDeleteAddress/${addressId}`, { method: 'DELETE' });
                        const result = await response.json();
                        if (result.success) {
                            Swal.fire(
                                'Deleted!',
                                'Your address has been deleted.',
                                'success'
                            ).then(() => {
                                location.reload(); // Optionally, reload the page or update the UI
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                'Failed to delete the address.',
                                'error'
                            );
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        Swal.fire(
                            'Error!',
                            'An error occurred while deleting the address.',
                            'error'
                        );
                    }
                }
            });
        });
    });
});





document.addEventListener('DOMContentLoaded', () => {
    // Handle Edit button clicks
    document.querySelectorAll('.btn-outline-secondary').forEach(button => {
        button.addEventListener('click', async () => {
            const addressId = button.getAttribute('data-id');

            try {
                const response = await fetch(`/CheckoutGetAddress/${addressId}`);
                const address = await response.json();

                if (address.success) {
                    // Populate the modal with address data
                    document.getElementById('editAddressId').value = address.data._id;
                    document.getElementById('editAddressName').value = address.data.addressName;
                    document.getElementById('editAddressEmail').value = address.data.addressEmail;
                    document.getElementById('editAddressMobile').value = address.data.addressMobile;
                    document.getElementById('editAddressHouse').value = address.data.addressHouse;
                    document.getElementById('editAddressStreet').value = address.data.addressStreet;
                    document.getElementById('editAddressCity').value = address.data.addressCity;
                    document.getElementById('editAddressDistrict').value = address.data.addressDistrict;
                    document.getElementById('editAddressState').value = address.data.addressState;
                    document.getElementById('editAddressPin').value = address.data.addressPin;

                    // Show the modal
                    $('#editAddressModal').modal('show');
                } else {
                    alert('Failed to load address details.');
                }
            } catch (error) {
                console.error('Error fetching address data:', error);
                alert('An error occurred while fetching address details.');
            }
        });
    });

    // Handle form validation and submission
    document.getElementById('editAddressForm').addEventListener('submit', async (event) => {
        event.preventDefault(); // Prevent default form submission

        // Clear previous error messages
        const errors = document.querySelectorAll('.invalid-feedback');
        errors.forEach(error => error.style.display = 'none');

        let valid = true;

        // Validate fields
        const fields = ['Name', 'Email', 'Mobile', 'House', 'Street', 'City', 'District', 'State', 'Pin'];
        fields.forEach(field => {
            const input = document.getElementById(`editAddress${field}`);
            if (!input.value.trim()) {
                document.getElementById(`edit-${field.toLowerCase()}-error`).style.display = 'block';
                valid = false;
            }
        });

        if (valid) {
            const form = document.getElementById('editAddressForm');
            const formData = new FormData(form);

            try {
                const response = await fetch('/CheckoutUpdateAddress', {
                    method: 'POST',
                    body: formData
                });
                const result = await response.json();

                if (result.success) {
                    $('#editAddressModal').modal('hide');
                    Swal.fire('Updated!', 'Your address has been updated.', 'success').then(() => {
                        location.reload(); // Optionally reload the page to see changes
                    });
                } else {
                    Swal.fire('Error!', 'Failed to update address.', 'error');
                }
            } catch (error) {
                console.error('Error updating address:', error);
                Swal.fire('Error!', 'An error occurred while updating the address.', 'error');
            }
        }
    });
});



document.addEventListener('DOMContentLoaded', () => {
    const placeOrderBtn = document.getElementById('placeOrderBtn');
    
    placeOrderBtn.addEventListener('click', async () => {
        const selectedAddress = document.querySelector('input[name="address"]:checked');
        const paymentMethod = document.querySelector('input[name="optradio"]:checked');
        
        if (!selectedAddress) {
            alert('Please select an address.');
            return;
        }
        
        if (!paymentMethod) {
            alert('Please select a payment method.');
            return;
        }

        const addressId = selectedAddress.value;
        const paymentMethodValue = paymentMethod.value;
        
        // Prepare data for order submission
        const orderData = {
            addressId: addressId,
            paymentMethod: paymentMethodValue
        };

        try {
            const response = await fetch('/placeOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(orderData)
            });
            const result = await response.json();

            if (result.success) {
                Swal.fire({
                    title: 'Order Placed!',
                    text: 'Your order has been successfully placed.',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then(() => {
                    window.location.href = '/orderConfirmation'; 
                });
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: result.message || 'An error occurred while placing the order.',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        } catch (error) {
            console.error('Error placing order:', error);
            Swal.fire({
                title: 'Error!',
                text: 'An error occurred while placing the order.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    });
});




</script>
    
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   


   
    <script src="/js/main.js"></script>

    <%- include('../Layout/user/footer.ejs') %>

  
    
   
      
   